{% extends "base.twig" %}

{% block title %}{{ comment.comment|length > 16 ? comment.comment|slice(0, 16) ~ '…' : comment.comment }}{% endblock %}
{% block contents %}
    {% if comment %}
        <div class="row">
            <article class="comments column">
                <section class="comment js-comment comment_top" id="top" data-comment="{{- comment.comment | trim }}">
                    <header class="comment__header">
                        {% set isSigned = comment.user_name and comment.user_image_url %}
                        <div>
                            <div class="comment__header__wrap">
                                {% if isSigned %}
                                    <img class="comment__header__wrap__icon" src="{{ comment.user_image_url }}" width="48" height="48" alt="{{ comment.user_name }}">
                                {% else %}
                                    <img class="comment__header__wrap__icon" src="/assets/img/anonymous-user.svg" width="48" height="48" alt="匿名ユーザー">
                                {% endif %}
                            </div>
                            <div class="comment__header__username">
                                {% if isSigned %}
                                    @{{ comment.user_name }}
                                {% else %}
                                    匿名ユーザー
                                {% endif %}
                            </div>
                        </div>
                        <div class="comment__header__createdat">
                            {% if comment.updated_at %}
                                <span class="comment__header__createdat__edited">[編集済み]</span>
                            {% endif %}
                            <a href="{{ path_for('comment', {'comment_id': comment.comment_id}) }}">{{ comment.createdAtStr }}</a>
                        </div>
                    </header>
                    <main class="comment__main">
                        <div id="comment" data-comment="{{ comment.comment }}">
                            {{ comment.comment }}
                        </div>
                        {% if comment.photo_url %}
                            <div class="comment_main__photo">
                                <img src="https://s3-{{ region }}.amazonaws.com/{{ bucket }}/{{ comment.photo_url }}"
                                     alt="{{ comment.comment }}">
                            </div>
                        {% endif %}
                    </main>
                    <footer class="comment__footer">
                        <div>
                            <a href="{{ path_for('thread', {}, {'thread_id': comment.thread_id}) }}">スレッドを見る</a>
                        </div>
                        <div>
                            そうだね&#215;<span
                                    id="like-{{ comment.comment_id }}_like">{{ comment.like_count }}</span>
                        </div>
                    </footer>
                </section>
            </article>
        </div>
    {% endif %}
{% endblock %}
{% block scripts %}
    <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
    <script>
        const twitter_embed = `<blockquote class="twitter-tweet"><a href="$url"></a></blockquote>`;
        const link_html = `<a href="{url}" target="_new">{url}</a>`;
        const reg = /^https?:\/\/twitter.com\/(.*)\/(status|statuses)\/(\d+)$/;
        const reg_link = /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]\.[^\s]{2,})/;

        function build_comment(comment) {
            let comment_str = comment.split('\n');
            // twitter-linkを検出
            const _this = this;
            comment_str = comment_str.map(function (value) {
                if (reg.test(value)) {
                    return twitter_embed.replace('$url', value);
                } else if (reg_link.test(value)) {
                    return link_html.replace(/{url}/g, value);
                }
                return value;
            });
            // コメントを結合
            return comment_str.join('<br/>');
        }

        document.getElementById('comment').innerHTML = build_comment(document.getElementById('comment').dataset.comment);
    </script>
{% endblock %}